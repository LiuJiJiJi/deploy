# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name ${DOMAIN};
    include     conf.d/generic/letsencrypt.conf;

    location / {
        return 301 https://${DOMAIN}$request_uri;
    }
}

# HTTPS redirect
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    server_name             ${DOMAIN};

    if ($host != '${DOMAIN}') {
        return 403;
    }

    # SSL
    ssl_certificate         /etc/letsencrypt/${DOMAIN}.fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/${DOMAIN}.privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/${DOMAIN}.chain.pem;

    # security
    include                 conf.d/generic/security.conf;

    # logging
    access_log              /var/log/nginx/${DOMAIN}.access.log;
    error_log               /var/log/nginx/${DOMAIN}.error.log warn;

    # reverse proxy
    location / {
        # root   /usr/share/nginx/html;
        # index  index.html index.htm;
        proxy_pass http://${PROXY_PASS};

        # proxy_set_header Content-Type 'application/json';
        # proxy_set_header X-NginX-Proxy true;
        # proxy_ssl_session_reuse off;
        # proxy_redirect off;

        include    conf.d/generic/proxy.conf;

        # if ($request_method = 'OPTIONS') {
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        #     #
        #     # Custom headers and headers various browsers *should* be OK with but aren't
        #     #
        #     add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        #     #
        #     # Tell client that this pre-flight info is valid for 20 days
        #     #
        #     add_header 'Access-Control-Max-Age' 1728000;
        #     add_header 'Content-Type' 'text/plain charset=UTF-8';
        #     add_header 'Content-Length' 0;
        #     return 204;
        # }

        # set $cors '';
        # if ($request_uri !~ '^/socket.io-client') {
        #     set $cors 'true';
        # }

        # if ($cors = 'true') {
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Credentials' 'true';
        # }

        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, If-Modified-Since, Authorization';
        add_header 'Access-Control-Allow-Methods' 'POST, GET, PUT, DELETE, OPTIONS';

    }

    # additional config
    include conf.d/generic/general.conf;
}